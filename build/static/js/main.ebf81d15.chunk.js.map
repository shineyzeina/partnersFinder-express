{"version":3,"sources":["components/LoaderButton.js","components/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["components_LoaderButton","_ref","isLoading","text","loadingText","_ref$className","className","_ref$disabled","disabled","props","Object","objectWithoutProperties","react_default","a","createElement","Button","assign","concat","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResetClick","setState","partners","state","allPartners","isSearchLoading","search_organization","fromLat","fromLong","kilometers","_this2","axios","get","then","data","sort","b","organization","id","_this3","delete","index","findIndex","partner","splice","history","push","org","lat","lng","parseInt","filteredPartners","filter","p","toLowerCase","includes","position","latitude","longitude","forEach","displayPartner","undefined","offices","office","coordinates","split","partnerPosition","far","geolib","km_far","withinRadius","_this4","react","length","Row","Col","md","Form","Group","controlId","Label","Control","value","onChange","event","target","style","width","onClick","search","cursor","Text","as","map","i","key","customerLocations","website","services","o","location","React","App","react_router","path","exact","component","withRouter","Boolean","window","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebf81d15.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default ({\r\n  isLoading,\r\n  text,\r\n  loadingText,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) =>\r\n  <Button\r\n    className={`LoaderButton ${className}`}\r\n    disabled={disabled || isLoading}\r\n    {...props}\r\n  >\r\n    {isLoading && <i className=\"fa fa-refresh fa-spin\" />}\r\n    {!isLoading ? text : loadingText}\r\n  </Button>;\r\n","import * as React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport axios from 'axios';\nimport * as geolib from 'geolib';\nimport { Form, Col, Row, Button, Modal, Container } from \"react-bootstrap\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport LoaderButton from \"../components/LoaderButton\";\n\n\ninterface IState {\n    partners: any[];\n\tallPartners: any[];\n\tisSearchLoading:false;\n\tsearch_organization:any;\n\tfromLat:any\n\tfromLong:any\n\tkilometers:any\n\t\n}\n\nexport default class Home extends React.Component<RouteComponentProps, IState> {\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = { partners: [] ,isSearchLoading: false, search_organization:\"\", allPartners:[], fromLat:\"\", fromLong:\"\",kilometers:\"\"}\n\t\t\n    }\n\n    public componentDidMount(): void {\n        axios.get(`http://localhost:5000/partners`).then(data => {\n\t\t\t\n\t\t\tvar partners = data.data;\n\t\t\tpartners.sort((a:any,b:any) => (a.organization > b.organization) ? 1 : ((b.organization > a.organization) ? -1 : 0))\n\t\t\n            this.setState({ allPartners: partners })\n\t\t\tthis.setState({ partners: partners })\n\t\t\t\n        })\n    }\n\n    public deletePartner(id: number) {\n        axios.delete(`http://localhost:5000/partners/${id}`).then(data => {\n            const index = this.state.partners.findIndex(partner => partner.id === id);\n            this.state.partners.splice(index, 1);\n            this.props.history.push('/');\n        })\n    }\n\t\n\thandleResetClick = () => {\n        this.setState({ partners: this.state.allPartners })\n\t\tthis.setState({ isSearchLoading: false })\n\t\tthis.setState({ search_organization: \"\",fromLat:\"\", fromLong:\"\",kilometers:\"\" })\n\t\t\n    }\n\t\n\tpublic search() {\n\t\tvar org = this.state.search_organization;\n\t\tvar lat = this.state.fromLat;\n\t\tvar lng = this.state.fromLong;\n\t\tvar kilometers = parseInt(this.state.kilometers);\n\t\t\n\t\tvar filteredPartners = this.state.allPartners;\n\t\t\n\t\tif (org !=\"\")\n\t\t{\n\t\t\tfilteredPartners = filteredPartners.filter(p => \n\t\t\t\tp.organization.toLowerCase().includes(org)\n\t\t\t);\n\t\t}\n\t\t\n\t\tif (lat!=\"\" && lng!=\"\" && kilometers !=0)\n\t\t{\n\t\t\tvar position ={ latitude: lat , longitude:lng};\n\t\t\tfilteredPartners.forEach(function (partner) {\n\t\t\t\tvar displayPartner = false;\n\t\t\t\tif (partner.offices !== undefined)\n\t\t\t\t{\n\t\t\t\t\tvar offices = partner.offices;\n\t\t\t\t\t\n\t\t\t\t\toffices.forEach(function (office:any) {\n\t\t\t\t\t\tif (office.coordinates)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar coordinates = (office.coordinates).split(\",\");\n\t\t\t\t\t\t\tvar partnerPosition = {latitude: coordinates[0],longitude: coordinates[1]};\n\t\t\t\t\t\t\tvar far = geolib.getDistance(position, partnerPosition);\n\t\t\t\t\t\t\toffice.km_far =far/1000; // change to kilometers\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// multiply by 1000 to change to meters.\n\t\t\t\t\t\t\tvar withinRadius = geolib.isPointWithinRadius(\n\t\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\t\tpartnerPosition,\n\t\t\t\t\t\t\t\tkilometers*1000\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\toffice.withinRadius = withinRadius;\n\t\t\t\t\t\t\tif (withinRadius == true) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayPartner = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tpartner.displayPartner = displayPartner;\n\t\t\t});\n\t\t\t\n\t\t\tfilteredPartners = filteredPartners.filter(p => \n\t\t\t\tp.displayPartner == true\n\t\t\t\n\t\t\t);\n\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t}\n\t\tfilteredPartners.sort((a,b) => (a.organization > b.organization) ? 1 : ((b.organization > a.organization) ? -1 : 0))\n\t\t\t\n\t\tthis.setState({ partners: filteredPartners })\n    }\n    public render() {\n        const partners = this.state.partners;\n        return (\n            <div>\n\t\t\t\t<h2>Search for your partners! Set your base coordinates and your kilometers search radius!</h2>\n                {partners.length === 0 && (\n                    <div className=\"text-center\">\n                        <h2>No partner found at the moment</h2>\n                    </div>\n                )}\n                \n                <div className=\"container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t <Col md={2}>\n\t\t\t\t\t\t\t<Form.Group controlId=\"search_organization\">\n\t\t\t\t\t\t\t\t<Form.Label>Organization</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control value={this.state.search_organization} onChange={(event)=> this.setState({search_organization:event.target.value})} />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t<Form.Group controlId=\"fromLat\">\n\t\t\t\t\t\t\t\t<Form.Label>Base Latitude</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control value={this.state.fromLat} onChange={(event)=> this.setState({fromLat:event.target.value})} />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t<Form.Group controlId=\"fromLong\">\n\t\t\t\t\t\t\t\t<Form.Label>Base longitude</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control value={this.state.fromLong} onChange={(event)=> this.setState({fromLong:event.target.value})} />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t<Form.Group controlId=\"kilometers\">\n\t\t\t\t\t\t\t\t<Form.Label>Kilometers</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control value={this.state.kilometers} onChange={(event)=> this.setState({kilometers:event.target.value})} />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={4} >\n\t\t\t\t\t\t\t<br/>\n                        <LoaderButton style={{width:130}} onClick={() => this.search()} text=\"Search\" loadingText=\"Searching...\" isLoading={this.state.isSearchLoading}/>&nbsp;&nbsp;&nbsp;\n                        <Button onClick={this.handleResetClick}>Reset</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\n\t\t\t\t\t</Row>\n\t\t\t\t\t\n\t\t\t\t\t<Row style={{cursor:\"pointer\"}} className=\"mainList tableHeader\">\n\t\t\t\t\t\t<Form.Text as={Col} md={2}  >Organization</Form.Text>\n\t\t\t\t\t\t<Form.Text as={Col} md={2}  >Location</Form.Text>\n\t\t\t\t\t\t<Form.Text as={Col} md={3}  >Website</Form.Text>\n\t\t\t\t\t\t<Form.Text as={Col} md={3}  >Services</Form.Text>\n\t\t\t\t\t\t<Form.Text as={Col} md={2}  >Office</Form.Text>\n\t\t\t\t\t\t\n\t\t\t\t\t</Row>\n                    \n\t\t\t\t\t{partners && partners.map((partner,i) =>\n\t\t\t\t\t\t<Row key={i} className=\"mainList\">\n\t\t\t\t\t\t\t<Col md={2}>{partner.organization}</Col>\n\t\t\t\t\t\t\t<Col md={2}>{partner.customerLocations}</Col>\n\t\t\t\t\t\t\t<Col md={3}>{partner.website}</Col>\n\t\t\t\t\t\t\t<Col md={3}>{partner.services}</Col>\n\t\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t{partner.offices[0] !== null ? partner.offices.map((o:any, index:number) => \n\t\t\t\t\t\t\t\t<div key={index} className=\"address\">\n\t\t\t\t\t\t\t\t\t{o.location}  \n\t\t\t\t\t\t\t\t\t{(o.km_far != null && o.km_far != \"\") ? \n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{o.withinRadius== true ? <span className=\"green\">{o.km_far}</span> : <span className=\"red\">{o.km_far}</span>} km away\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div> : \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t) : \"\"}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t)}\n                           \n                </div>\n\n            </div>\n        )\n    }\n}\n","import * as React from 'react';\nimport './App.css';\nimport { Switch, Route, withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport Home from './components/Home';\n\n\n\nclass App extends React.Component<RouteComponentProps<any>> {\n  public render() {\n    return (\n      <div>\n        \n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          \n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}